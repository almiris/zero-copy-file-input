{"src/lib/components/ZeroCopyFileInput.react.js":{"description":"ZeroCopyFileInput \u2013 a thin Dash wrapper around <input type=\"file\">.\n\nBecause it never Base-64-encodes the payload, you can stream multi-GB\nfiles directly from the browser (e.g. to presigned S3 URLs) without\ncrashing the tab.  Use a client-side callback or assets JS to grab the\nreal File object:  document.getElementById(id).files[0]","displayName":"ZeroCopyFileInput","methods":[],"props":{"id":{"type":{"name":"string"},"required":false,"description":"Dash component id"},"accept":{"type":{"name":"string"},"required":false,"description":"Comma-separated list of MIME types / extensions (e.g. \"image/*,.zip\")"},"multiple":{"type":{"name":"bool"},"required":false,"description":"Allow selecting more than one file","defaultValue":{"value":"false","computed":false}},"disabled":{"type":{"name":"bool"},"required":false,"description":"Disable the input","defaultValue":{"value":"false","computed":false}},"style":{"type":{"name":"object"},"required":false,"description":"Inline CSS","defaultValue":{"value":"{}","computed":false}},"className":{"type":{"name":"string"},"required":false,"description":"CSS class","defaultValue":{"value":"\"\"","computed":false}},"value":{"type":{"name":"union","value":[{"name":"string"},{"name":"arrayOf","value":{"name":"string"}}]},"required":false,"description":"Filename string (or array of filenames strings if multiple is true) the browser puts in <input>.  Serves only as a\nlightweight signal \u2013 the real bytes stay in the DOM FileList.","defaultValue":{"value":"\"\"","computed":false}},"timestamp":{"type":{"name":"number"},"required":false,"description":"Timestamp updated on every selection.  Use this as `Input` to\nguarantee Dash callbacks fire even if the user chooses the same file."},"setProps":{"type":{"name":"func"},"required":false,"description":"Set by Dash to report prop changes back to Python"}}}}